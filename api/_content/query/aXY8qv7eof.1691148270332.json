[{"_path":"/blog/deno-vs-node","_dir":"blog","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"How Deno differs from Node.js","description":"This article goes over the core differences between Deno and Node.js.","id":"5bnxpbo182efvf38j331nes","updated":1688877769873,"created":1686355733170,"image":"/content/cover/deno-vs-node.png","head":{"meta":[{"name":"keywords","content":"deno, nodejs, shorts"},{"name":"robots","content":"index, follow"},{"name":"author","content":"Dawit (@oneminch)"},{"property":"og:type","content":"article"},{"name":"twitter:card","content":"summary_large_image"}]},"tags":["deno","nodejs","shorts"],"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://deno.land","rel":["nofollow"]},"children":[{"type":"text","value":"Deno"}]},{"type":"text","value":" improves upon "},{"type":"element","tag":"a","props":{"href":"https://nodejs.org","rel":["nofollow"]},"children":[{"type":"text","value":"Node.js"}]},{"type":"text","value":" in some significant ways."}]},{"type":"element","tag":"h3","props":{"id":"modules"},"children":[{"type":"text","value":"Modules"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Modules are loaded directly from URLs and cached locally."}]},{"type":"element","tag":"code","props":{"className":["language-js"],"code":"import confetti from \"https://esm.sh/canvas-confetti@1.6.0\";\n","language":"js","meta":""},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{"class":"ct-422695"},"children":[{"type":"text","value":"import"}]},{"type":"element","tag":"span","props":{"class":"ct-212021"},"children":[{"type":"text","value":" confetti "}]},{"type":"element","tag":"span","props":{"class":"ct-422695"},"children":[{"type":"text","value":"from"}]},{"type":"element","tag":"span","props":{"class":"ct-212021"},"children":[{"type":"text","value":" "}]},{"type":"element","tag":"span","props":{"class":"ct-839335"},"children":[{"type":"text","value":"\"https://esm.sh/canvas-confetti@1.6.0\""}]},{"type":"element","tag":"span","props":{"class":"ct-212021"},"children":[{"type":"text","value":";"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This allows decentralization of packages by removing reliance on "},{"type":"element","tag":"a","props":{"href":"https://npmjs.com","rel":["nofollow"]},"children":[{"type":"text","value":"npm"}]},{"type":"text","value":" and enabling developers to self-host their packages."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Consequently, this removes the need for "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"package.json"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"node_modules"}]},{"type":"text","value":", and allows programs to run in the browser since there is no reliance on build tools like webpack."}]},{"type":"element","tag":"h3","props":{"id":"security"},"children":[{"type":"text","value":"Security"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Because code is executed in a sandbox, the Deno runtime has no access to the file system, and the network. Flags like "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"--allow-write"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"--allow-net"}]},{"type":"text","value":" can be used to explicitly enable access."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to the above features, Deno supports TypeScript out of the box, and has a built-in formatter for code similar to ESLint for Node.js."}]},{"type":"element","tag":"style","children":[{"type":"text","value":".ct-422695{color:#FF7B72;}\n.ct-212021{color:#C9D1D9;}\n.ct-839335{color:#A5D6FF;}"}]}],"toc":{"title":"","searchDepth":2,"depth":1,"links":[]}},"_type":"markdown","_id":"content:blog:deno-vs-node.md","_source":"content","_file":"blog/deno-vs-node.md","_extension":"md"},{"_path":"/blog/dns","_dir":"blog","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Computer Networks: DNS Basics","description":"What is the Domain Name System?","id":"bmYRMchdQ79b4wetoTzAV","updated":1688877769861,"created":1645422712314,"image":"/content/cover/dns.png","head":{"meta":[{"name":"keywords","content":"dns, http, https, networking"},{"name":"robots","content":"index, follow"},{"name":"author","content":"Dawit (@oneminch)"},{"property":"og:type","content":"article"},{"name":"twitter:card","content":"summary_large_image"}]},"tags":["dns","http","https","networking"],"series":"Computer Networks","navOrder":1,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When a user makes any form of request on a network such as a website by typing the URL, all the user is asking is the files associated with that URL. To fetch these files, the client needs to know which computer (server) on the Internet they are being hosted on and open a secure connection to that computer. On a network, computers and different network devices can't identify and locate one another using names. Instead, they communicate with each other using what is known as IP addresses. Therefore, the client needs to know what the IP address of the server is. Since users can't memorize the IP address of each website they're using, the client needs a way of figuring out what IP address is associated with the given URL. This system of mapping or translating domain names to corresponding IP addresses is known as the "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Domain Name System"}]},{"type":"text","value":" or "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"DNS"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The Domain Name System is a distributed database of hostname to IP address mappings. It is updated whenever someone purchases and register a new domain. You can imagine this being as the phone book of the Internet. Its primary function is to provide translation or resolution of hostnames to IP addresses."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is much easier for you to memorize the domain name of a service (e.g. "},{"type":"element","tag":"a","props":{"href":"https://duckduckgo.com","rel":["nofollow"]},"children":[{"type":"text","value":"https://duckduckgo.com"}]},{"type":"text","value":") than one of its corresponding IP addresses (e.g. 23.21.193.169). Typing the IP address in the URL bar and submitting would still take you to the site, but doing that for every website you are using is not very convenient. Instead, your computer relies on DNS servers to automatically do the mapping for you. To make requests even faster, it uses caching to store mappings for easier future reference."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The role of DNS is more predominant in distributed computing for the reason that it maps domain names to the IP address of the server that is closest to the client requesting it. This means the same domain name can be mapped to different IP addresses at the same time, which is a key feature in providing a faster and more reliable response to users."}]},{"type":"element","tag":"h2","props":{"id":"how-dns-works"},"children":[{"type":"text","value":"How DNS Works"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"DNS servers can be any of these 4 categories:"}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Recursive nameserver (DNS Resolver)"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Root nameserver"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Top-level Domain (TLD) nameservers"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Authoritative nameservers"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Let's assume a user wants to visit "},{"type":"element","tag":"a","props":{"href":"https://mozilla.org","rel":["nofollow"]},"children":[{"type":"text","value":"https://mozilla.org"}]},{"type":"text","value":" and types the URL in the bar."}]},{"type":"element","tag":"ol","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The computer searches for the associated IP address in the local DNS cache to see if this site has been recently retrieved. If it is found, the process ends here and the IP address gets returned."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"If not found in the local cache, the computer continues to ask the DNS resolver from the Internet Service Provider (ISP) which has its own cache. Many customers of the ISP are likely using the same resolver, so popular services and domains will probably be cached. It looks for the mappings in the resolver's cache as well. If it's found, the process ends here and the IP address gets returned. Otherwise, it continues to the next stage."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The DNS resolver queries the root nameservers, which don't know the IP address but help direct the queries to the servers that know where to find it. These are responsible for knowing the IP addresses of the servers for each top-level domain (TLD). They look at the TLD of the domain name, which in our case is the .org in mozilla.org. Each TLD has its own set of nameservers. Then, it forwards our query to the TLD nameserver responsible for .org domain names."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The TLD nameserver looks at the next part of the domain name, the second-level domain (Mozilla in this example), and it directs the query to the authoritative nameserver which is responsible for this particular domain. This is the final stop of the DNS servers, and it is responsible for all the details about a particular domain. It contains many types of records, which are sets of different kinds of information about the domain. In this example, we are only looking for the IP address of the web server, so we request the authoritative nameserver for that information."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The DNS resolver receives the info and stores in its local cache for future reference. Another customer wanting to navigate to "},{"type":"element","tag":"a","props":{"href":"https://mozilla.org","rel":["nofollow"]},"children":[{"type":"text","value":"https://mozilla.org"}]},{"type":"text","value":" is spared this lookup process because of caching. But, cached records have expiration dates and need to be replaced with new copies by the resolver to ensure up-to-date information."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"The record is returned to the client by the resolver. The client stores the record in its own cache. It then retrieves the IP address from the record and passes it to the browser, so the browser can open a connection and make the request to the web server with the site information."}]}]},{"type":"element","tag":"blockquote","props":{},"children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Note"}]},{"type":"text","value":": In occasions where the query contains a subdomain (e.g. "},{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org","rel":["nofollow"]},"children":[{"type":"text","value":"https://developer.mozilla.org"}]},{"type":"text","value":"), there will be an extra nameserver that gets added to the end of the sequence which is responsible for that subdomain ("},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"developer"}]},{"type":"text","value":")."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"DNS Resolution Flowchart","src":"/content/dns.resolution.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"All this process is performed whenever someone wants to visit a website, and it is completed in a matter of milliseconds."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"It is important to know that caching may cause some problems. If a certain website changes its IP address and the local cache is not updated, that site may not be accessible since its address has changed and the cached address is now outdated. Security issues may also arise due to caching. If a malware has infected a user's device and poisoned the local cache, it may change the entries of hostname to IP mappings. It may change the IP address of a certain site, so it points to the server of a malicious site instead of the actual server. Therefore, clearing DNS cache regularly and using some anti-malware software is necessary."}]},{"type":"element","tag":"h2","props":{"id":"dns-over-https-doh"},"children":[{"type":"text","value":"DNS over HTTPS (DoH)"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As you saw from the above text on how DNS works, DNS queries pass through the DNS resolver, which is basically an ISP. The information being passed around is in plain text, which means anyone including the ISP and a potential attacker can view DNS queries and therefore where you want to navigate to. This can be used for surveillance, eavesdropping, or to manipulate actual data to make users visit malicious sites. This raises big security and privacy concerns."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In recent years, there is a movement to implement encrypted DNS with a protocol known as DNS over HTTPS (DoH). DoH protocol takes advantage of the HTTPS protocol to encrypt DNS queries. It is the similar concept behind encrypting HTTP requests. It provides more security and privacy to users as it encrypts DNS data between the client and the resolver. Widely used browsers like Firefox Browser have already added these features in their settings, and it's being implemented by more and more browsers."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Originally Posted on "},{"type":"element","tag":"a","props":{"href":"https://iq.opengenus.org/domain-name-system-explained/","rel":["nofollow"]},"children":[{"type":"text","value":"OpenGenus IQ"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":1,"links":[{"id":"introduction","depth":2,"text":"Introduction"},{"id":"how-dns-works","depth":2,"text":"How DNS Works"},{"id":"dns-over-https-doh","depth":2,"text":"DNS over HTTPS (DoH)"}]}},"_type":"markdown","_id":"content:blog:dns.md","_source":"content","_file":"blog/dns.md","_extension":"md"},{"_path":"/blog/http","_dir":"blog","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Computer Networks: HTTP Basics","description":"What is the HyperText Transfer Protocol?","id":"vOpWDwrzniiD9e2YgWVwk","updated":1688877769852,"created":1645422279906,"image":"/content/cover/http.png","head":{"meta":[{"name":"keywords","content":"http, https, networking"},{"name":"robots","content":"index, follow"},{"name":"author","content":"Dawit (@oneminch)"},{"property":"og:type","content":"article"},{"name":"twitter:card","content":"summary_large_image"}]},"tags":["http","https","networking"],"series":"Computer Networks","navOrder":2,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this article, I will discuss how HTTP requests work behind the scenes."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Before we delve deeper into this topic, let's see an overview of how the web works. When a person wants to visit a website, they type in the address of the site into their browser or client (for instance iq.opengenus.org). The web addresses typed into URL bars are not actual addresses of the sites. The actual web addresses are in the form of IP addresses (like 159.89.134.55). But memorizing these addresses is not convenient for each website a person wants to use."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is why DNS (Domain Name System) servers exist. You can imagine these servers as the phone books of the Internet. Computers use IP addresses to identify and communicate with each other. When someone requests a website, the browser contacts a DNS server. The DNS server then tells the browser the IP address associated with the computer or server that hosts the requested site. This is the address of the device where the documents and files for that site are hosted. The files necessary get sent back to the browser and get assembled and rendered by the browser as the websites we use every day."}]},{"type":"element","tag":"h2","props":{"id":"terminology"},"children":[{"type":"text","value":"Terminology"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Client"}]},{"type":"text","value":" here refers to the computer asking for service by making requests — e.g. to make a search or to check news"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Server"}]},{"type":"text","value":" is the computer, that is usually located somewhere else, holding the things necessary to provide those services. It is responsible for sending responses to requests."}]},{"type":"element","tag":"h2","props":{"id":"how-actually-are-requests-made"},"children":[{"type":"text","value":"How actually are requests made?"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Requests on the web are made through a set of steps and make use of a protocol known as HTTP. HTTP stands for HyperText Transfer Protocol. It is used for communication between the client and the server(s). It is the foundation of the Internet. HTTP uses the URL typed into the browser to identify the resource wanted and to make a connection."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"When requesting a site, the URL looks something like this "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"http://duckduckgo.com"}]},{"type":"text","value":". Using the URL provided, the browser identifies the request needs to be made through "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"http"}]},{"type":"text","value":" and the domain name for the web address is "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"duckduckgo.com"}]},{"type":"text","value":" which it then sends to a DNS server to get the IP address of the server the site is hosted on. Once the client (browser) knows the IP address of the destination server, it opens a connection channel to it and makes the request needed. All this process is only the initial part of the steps taken to make the request."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Request messages are exchanged between the client and server to fulfill that request, and they usually follow a similar format. They contain 4 components: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"a start line"}]},{"type":"text","value":", "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"headers"}]},{"type":"text","value":" followed by "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"an empty line"}]},{"type":"text","value":" to indicate the end of headers and an optional "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"body"}]},{"type":"text","value":"."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Below is an example of a typical GET request message. This is similar to what you would usually see if you open the Network tab from your browser Dev Tools."}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"GET /tag/algorithm HTTP/1.1\nUser-Agent: Mozilla/5.0 (Windows NT) Gecko/20100101 Firefox/73.0\nHost: iq.opengenus.org\nAccept-Language: en-us\nAccept-Encoding: gzip, deflate\nConnection: Keep-Alive\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"GET /tag/algorithm HTTP/1.1\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"User-Agent: Mozilla/5.0 (Windows NT) Gecko/20100101 Firefox/73.0\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Host: iq.opengenus.org\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Accept-Language: en-us\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Accept-Encoding: gzip, deflate\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Connection: Keep-Alive"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"_1-start-line"},"children":[{"type":"text","value":"1. Start Line"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is the first line of a message describing the requests to be implemented."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For a request, this line contains these values separated by a space: method, request URI and HTTP version followed by a new line."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Method"}]},{"type":"text","value":" indicates the type of request to be made and common values include: GET, HEAD, POST, PUT, and DELETE."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"HTTP Version"}]},{"type":"text","value":" is the version of HTTP, usually HTTP/1.0 or HTTP/1.1."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Request URI"}]},{"type":"text","value":" is the path to the resource upon which the request is to be made. It can be either an absolute URI or a relative URI."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Examples are shown below."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/"}]},{"type":"text","value":" - is a relative URI meaning root path. We are not navigating any further. We have identified the host, and we are making request on the root."}]}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"GET / HTTP/1.1\nHost: iq.opengenus.org\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"GET / HTTP/1.1\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Host: iq.opengenus.org"}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"https://iq.opengenus.org/tag/algorithm"}]},{"type":"text","value":" - is the absolute URI."}]}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"GET https://iq.opengenus.org/tag/algorithm HTTP/1.1\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"GET https://iq.opengenus.org/tag/algorithm HTTP/1.1"}]}]}]}]}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"/tag/algorithm"}]},{"type":"text","value":" - is a relative URI meaning we are navigating to this path from the host or root path which is "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"iq.opengenus.org"}]},{"type":"text","value":"."}]}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"GET /tag/algorithm HTTP/1.1\nHost: iq.opengenus.org\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"GET /tag/algorithm HTTP/1.1\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Host: iq.opengenus.org"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"For a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"response"}]},{"type":"text","value":", the template is composed of these values separated by a space: "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"HTTP version"}]},{"type":"text","value":", "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"status code"}]},{"type":"text","value":", and "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"a reason phrase"}]},{"type":"text","value":"."}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"HTTP Version"}]},{"type":"text","value":" is the version of HTTP, usually HTTP/1.0 or HTTP/1.1."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Status Code"}]},{"type":"text","value":" is a 3 digit integer indicating the status of our response. These can be in any one of 5 classes:"},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"100 - 199"}]},{"type":"text","value":": Informational"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"200 - 299"}]},{"type":"text","value":": Success"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"300 - 399"}]},{"type":"text","value":": Redirection"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"400 - 499"}]},{"type":"text","value":": Client Error"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"500 - 599"}]},{"type":"text","value":": Server Error"}]}]}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Status Phrase"}]},{"type":"text","value":" follows the status code and is a short summary of the status of the response."}]}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"HTTP/1.1 200 OK\nHTTP/1.1 404 Not Found\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"HTTP/1.1 200 OK\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"HTTP/1.1 404 Not Found"}]}]}]}]}]},{"type":"element","tag":"h3","props":{"id":"_2-headers"},"children":[{"type":"text","value":"2. Headers"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Headers follow the start line, and they allow the client to pass additional information about the request or the client itself to the server, or they allow the server to pass additional information about the response to the client. They usually appear as key-value pairs. Headers can be:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"General headers"}]},{"type":"text","value":" - applicable to both requests and responses."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Request headers"}]},{"type":"text","value":" - applicable to only requests sent by the client."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Response headers"}]},{"type":"text","value":" - applicable to only responses sent by the server."}]},{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Entity headers"}]},{"type":"text","value":" - applicable to message body (if there is any)."}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Some common headers are listed below:"}]},{"type":"element","tag":"table","props":{},"children":[{"type":"element","tag":"thead","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"General"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Request"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Response"}]},{"type":"element","tag":"th","props":{"align":null},"children":[{"type":"text","value":"Entity"}]}]}]},{"type":"element","tag":"tbody","props":{},"children":[{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"cache-control"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"accept"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"age"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"allow"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"connection"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"cookie"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"location"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"content-length"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"date"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"host"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"retry-after"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"expires"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"upgrade"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"user-agent"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"server"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"last-modified"}]}]},{"type":"element","tag":"tr","props":{},"children":[{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"via"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"DNT"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"set-cookie"}]},{"type":"element","tag":"td","props":{"align":null},"children":[{"type":"text","value":"content-type"}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Header fields ensure requests and responses are made just the way the client and server want. In other words, header fields are a means of communication between a client and a server with specific details given to fulfill the request."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Caching"}]},{"type":"text","value":" is one method which makes this whole process more convenient for the devices involved. It improves performance by removing the need for a client to send any or some requests, or the need for a server to send back any or some responses. It does so by using the "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"cache-control"}]},{"type":"text","value":" header field."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Content types"}]},{"type":"text","value":" are important in enforcing the data types sent to a server or sent back from a server are in alignment with each other. Header fields like "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"accept"}]},{"type":"text","value":" and "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"content-type"}]},{"type":"text","value":" are a means of communicating the types of files and documents involved in a request."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"Client details"}]},{"type":"text","value":" like the type of hardware and versions of software are also important in delivering an optimized experience. The "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"user-agent"}]},{"type":"text","value":" header field passes detailed information about the client to the server, so that the server can send back the necessary files for the request. Due to compatibility issues, the files necessary for a service to work on one device may be completely different from another device. Identifying device types using this header field helps the process."}]},{"type":"element","tag":"h3","props":{"id":"_3-body"},"children":[{"type":"text","value":"3. Body"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"If our message has a body, it is preceded by an empty line which come after the headers. The empty line indicates the end of header fields. The message body carries actual data for a request from a client (e.g. form data when authenticating) or a response from a server (e.g. files and images).\nA simple line of code can be passed after the empty line as the body of a request or a response. The following two examples show server responses: when the requested resource is found and when it's not found."}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"HTTP/1.1 200 OK\nServer: nginx\nContent-Type: text/html\nConnection: Closed\n\n<html>\n    <body>\n        <h1>Hello, Friend!</h1>\n        <p>Nice to see you!</p>\n    </body>\n</html>\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"HTTP/1.1 200 OK\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Server: nginx\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Content-Type: text/html\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Connection: Closed\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"<html>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    <body>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        <h1>Hello, Friend!</h1>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        <p>Nice to see you!</p>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    </body>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"</html>"}]}]}]}]}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"HTTP/1.1 404 Not Found\nServer: nginx\nContent-Type: text/html\nConnection: Closed\n\n<html>\n    <body>\n        <h1>File Not Found</h1>\n        <p>Sorry friend, the requested resource wasn't found</p>\n    </body>\n</html>\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"HTTP/1.1 404 Not Found\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Server: nginx\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Content-Type: text/html\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Connection: Closed\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"<html>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    <body>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        <h1>File Not Found</h1>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"        <p>Sorry friend, the requested resource wasn't found</p>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":10},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    </body>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":11},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"</html>"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"To get a closer look at requests in your browser, you can navigate to 'Network' tab of your browser's Developer Tools, or just hit "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Cmd + Opt + E"}]},{"type":"text","value":" on Mac or "},{"type":"element","tag":"code-inline","props":{},"children":[{"type":"text","value":"Ctrl + Shift + E"}]},{"type":"text","value":" on Windows and Linux. Type the URL to any website and see all the requests and responses made. Usually there are several requests and responses made. Each request fetching a single file that is a component of the website to be rendered."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"img","props":{"alt":"Developer Tools: Network Tab (Firefox)","src":"/content/http.network-tab.png"},"children":[]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The above image shows a detailed look at what goes on behind the scenes when navigating to the "},{"type":"element","tag":"a","props":{"href":"https://duckduckgo.com/","rel":["nofollow"]},"children":[{"type":"text","value":"DuckDuckGo"}]},{"type":"text","value":" website. As you can see in the bottom left corner, there were a total of 29 GET requests made. File types range from simple HTML, CSS & JavaScript files to images and font files. Greyed out rows indicate the requests has been cached from previously made requests. The right section of the image shows the details of the first request which fetches the HTML file for the website. Consecutive rows show the order by which the other file types are loaded. When working with requests, it's important to make sure the necessary files come first. In this case, the HTML file is the most relevant file. For users whose connection might be interrupted easily, having the HTML file is enough to make the search. All the CSS, images and font files are secondary, and they're not really necessary for someone to make a search on DuckDuckGo."}]},{"type":"element","tag":"h2","props":{"id":"a-few-more-examples"},"children":[{"type":"text","value":"A few more examples"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In this one, we are using "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"POST"}]},{"type":"text","value":" method to make searches on DuckDuckGo. The request looks like this:"}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"POST https://duckduckgo.com HTTP/1.1\nAccept: text/html\nAccept-Language: en-US\nConnection: keep-alive\nContent-Length: 18\nContent-Type: application/x-www-form-urlencoded\nUser-Agent: Mozilla/5.0 (Windows NT) Gecko/20100101 Firefox/73.0\n\nq=opengenus\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"POST https://duckduckgo.com HTTP/1.1\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Accept: text/html\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Accept-Language: en-US\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Connection: keep-alive\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Content-Length: 18\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Content-Type: application/x-www-form-urlencoded\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"User-Agent: Mozilla/5.0 (Windows NT) Gecko/20100101 Firefox/73.0\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":8},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":9},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"q=opengenus"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"PUT"}]},{"type":"text","value":" method is very similar to POST but it is used to update resources."}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"PUT /update.html HTTP/1.1\nHost: website.com\nContent-type: text/html\nContent-length: 26\n\n<p>File to be updated</p>\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"PUT /update.html HTTP/1.1\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Host: website.com\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Content-type: text/html\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"Content-length: 26\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"<p>File to be updated</p>"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"DELETE"}]},{"type":"text","value":" method can be used to delete a given resource."}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"DELETE /resource.html HTTP/1.1\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"DELETE /resource.html HTTP/1.1"}]}]}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"The server can send back a response notifying the client about the completion of the DELETE request."}]},{"type":"element","tag":"code","props":{"className":["language-undefined"],"code":"HTTP/1.1 200 OK\n\n<html>\n  <body>\n    <h1>Resource successfully deleted.</h1>\n  </body>\n</html>\n"},"children":[{"type":"element","tag":"pre","props":{},"children":[{"type":"element","tag":"code","props":{"__ignoreMap":""},"children":[{"type":"element","tag":"span","props":{"class":"line","line":1},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"HTTP/1.1 200 OK\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":2},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":3},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"<html>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":4},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  <body>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":5},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"    <h1>Resource successfully deleted.</h1>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":6},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"  </body>\n"}]}]},{"type":"element","tag":"span","props":{"class":"line","line":7},"children":[{"type":"element","tag":"span","props":{},"children":[{"type":"text","value":"</html>"}]}]}]}]}]},{"type":"element","tag":"h2","props":{"id":"https"},"children":[{"type":"text","value":"HTTPS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"HTTP requests can be easily intercepted or read by anyone at any point in the network. Therefore, sensitive information like credit card numbers and passwords should never be delivered using HTTP. Instead, an extension of HTTP known as HTTPS (HyperText Transfer Protocol Secure) is used. It creates a secure channel over the network so that encrypted data is transferred between the client and the server. This provides protection from potential eavesdroppers or man-in-the-middle attacks. This is one of the parameters your browser uses to notify you if a website is secure or not."}]},{"type":"element","tag":"h2","props":{"id":"references"},"children":[{"type":"text","value":"References"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://developer.mozilla.org/en-US/docs/Web/HTTP","rel":["nofollow"]},"children":[{"type":"text","value":"HTTP - Mozilla Developer Network"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Originally posted on "},{"type":"element","tag":"a","props":{"href":"https://iq.opengenus.org/http-requests/","rel":["nofollow"]},"children":[{"type":"text","value":"OpenGenus IQ"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":1,"links":[{"id":"terminology","depth":2,"text":"Terminology"},{"id":"how-actually-are-requests-made","depth":2,"text":"How actually are requests made?"},{"id":"a-few-more-examples","depth":2,"text":"A few more examples"},{"id":"https","depth":2,"text":"HTTPS"},{"id":"references","depth":2,"text":"References"}]}},"_type":"markdown","_id":"content:blog:http.md","_source":"content","_file":"blog/http.md","_extension":"md"},{"_path":"/blog/https","_dir":"blog","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"Computer Networks: HTTPS Basics","description":"What is HTTPS?","id":"jYZ0sR3cQogjZjo5ru0oP","updated":1688877769837,"created":1645422195673,"image":"/content/cover/https.png","head":{"meta":[{"name":"keywords","content":"http, https, networking, ssl"},{"name":"robots","content":"index, follow"},{"name":"author","content":"Dawit (@oneminch)"},{"property":"og:type","content":"article"},{"name":"twitter:card","content":"summary_large_image"}]},"tags":["http","https","networking","ssl"],"series":"Computer Networks","navOrder":3,"body":{"type":"root","children":[{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"HTTPS"}]},{"type":"text","value":" is a protocol which is an improvement over HTTP and is the short form of "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"HyperText Transfer Protocol Secure"}]},{"type":"text","value":" (HTTP + SSL). In this article, we will look at the shortcomings of HTTP which lead to the development of HTTPS and some basic ideas behind HTTPS. It'll cover these sub topics:"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Drawbacks of HTTP"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"HTTPS as the solution"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"HTTPS = HTTP + SSL"}]},{"type":"element","tag":"li","props":{},"children":[{"type":"text","value":"Limitations of HTTPS"}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As introduced in "},{"type":"element","tag":"a","props":{"href":"https://dev.to/oneminch/http-basics-nji","rel":["nofollow"]},"children":[{"type":"text","value":"this article about HTTP"}]},{"type":"text","value":", HTTP is a protocol of the web that allows communication between devices. It is the technology behind the requests and responses made on the web. Once the client device has identified the server address, it works by opening a connection tunnel to the server, so the intended requests are made."}]},{"type":"element","tag":"h2","props":{"id":"drawbacks-of-http"},"children":[{"type":"text","value":"Drawbacks of HTTP"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"HTTP requests are not considered safe since they can be easily intercepted and manipulated by anyone on the network. A very common analogy to describe plain HTTP is the use of pipes as a means of communication. Imagine a transparent glass pipe that connects two points. Everything sent between anyone from one point to the other can be seen passing through the pipe. A person standing in the middle can see the things passing through the transparent pipe. This is how plain HTTP requests work. There is no layer of security to hide the contents of requests and responses. Data can be tampered with or snooped on by any party on the network like Internet Service Providers (ISPs), malicious hackers or even employers. Therefore, sensitive data like financial information and website passwords should not be transferred over just HTTP."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"Another drawback is that "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"someone on the network can manipulate the requests"}]},{"type":"text","value":", so they can insert ads, or inject code to serve phishing sites or just steal user information. In HTTP, if you visit a site, lets say, a shopping site, there is no way to actually verify that the site that you are visiting is the site you wanted to visit. In other words, the website you get if you wanted to go to "},{"type":"element","tag":"a","props":{"href":"http://dev.to","rel":["nofollow"]},"children":[{"type":"text","value":"http://dev.to"}]},{"type":"text","value":", might not be the actual website. It can be a forged site injected by some entity along the network to trick users into giving away personal information. All these problems make plain HTTP a less ideal way to communicate on the web."}]},{"type":"element","tag":"h2","props":{"id":"the-solution-https"},"children":[{"type":"text","value":"The Solution: HTTPS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is where "},{"type":"element","tag":"strong","props":{},"children":[{"type":"text","value":"HTTPS"}]},{"type":"text","value":" comes in. HTTPS is an extension of HTTP and it makes sure the there is a secure communication over the network. HTTPS is not actually a separate protocol from HTTP. It is the same protocol except the connection is encrypted unlike plain HTTP where the connection is unencrypted. Request and response messages include components like headers and a body. All data like request messages get encrypted before they leave the sender. Going back to our pipe analogy, HTTPS can be imagined as being an opaque metal or plastic pipe. This means that the contents of the messages transferred are hidden from visibility and manipulation."}]},{"type":"element","tag":"h2","props":{"id":"https-http-ssl"},"children":[{"type":"text","value":"HTTPS = HTTP + SSL"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"HTTPS uses a cryptographic protocol known as TLS (Transport Layer Security) to encrypt transactions. Originally, what it used was known as SSL (Secure Sockets Layer), which later evolved to TLS. Thus, it's sometimes referred to as HTTP over SSL or HTTP over TLS. Even though SSL and TLS refer to much different versions of the same protocol, the terms are often used interchangeably. This protocol ensures data security when it is transferred over a network which means protection from issues like potential eavesdropping and man-in-the-middle attacks because of end-to-end encryption between client and server."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"In addition to protecting eavesdropping, HTTPS guarantees the request/response is delivered to the right recipient. It verifies the authenticity of all the entities involved in the process. For a website to be secured with HTTPS in a user's browser, it needs to provide a form of authentication to prove that it is the actual website that belongs to the actual server. To ensure this, it requires the server to install what is known as a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"certificate"}]},{"type":"text","value":" which is a unique cryptographic key and have it signed by an entity known as a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"certificate authority"}]},{"type":"text","value":". The administrator of the website can ask the "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"certificate authority"}]},{"type":"text","value":" to issue a "},{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"certificate"}]},{"type":"text","value":". In other words, a certificate is a way of saying if a browser is opened at "},{"type":"element","tag":"a","props":{"href":"https://duckduckgo.com","rel":["nofollow"]},"children":[{"type":"text","value":"https://duckduckgo.com"}]},{"type":"text","value":", then it is really on the official site for DuckDuckGo."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"As mentioned above, SSL is the protocol used for transmitting data over the Internet securely. Before getting to the request and response transaction over SSL, a server needs to prove it is the legitimate one the client wants to communicate with. The server sends its SSL certificate to the browser which then checks if that server is who it says it is. Once the browser has verified the identity of the server, they use cryptographic keys to proceed with the data exchange."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This video explains well how SSL encryption works."}]},{"type":"element","tag":"iframe","props":{"title":"vimeo-player","src":"https://player.vimeo.com/video/239132801?h=4bbba48a70","width":640,"height":360,"frameBorder":"0","allowFullScreen":true},"children":[{"type":"text","value":"DigiCert - # What is SSL and Why Does It Matter?"}]},{"type":"element","tag":"h2","props":{"id":"limitations-of-https"},"children":[{"type":"text","value":"Limitations of HTTPS"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"However, HTTPS has its limitations. Domain names and IP addresses are not secure when using HTTPS. This is part of the reason why the use of VPNs is advised when using public wireless networks to mask IP addresses."}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"HTTPS is becoming adopted by more and more websites every day. Modern browsers like Firefox and Chrome warn users if a website has an invalid certificate or if the connection is not secure (if it uses http:// instead of https://). They use a lock icon to the left of each URL to indicate if the site is authenticated and if it uses HTTPS. Latest versions of these browsers even ask twice before navigating to insecure sites. Tools like Firefox's built-in "},{"type":"element","tag":"a","props":{"href":"https://support.mozilla.org/en-US/kb/https-only-prefs","rel":["nofollow"]},"children":[{"type":"text","value":"HTTPS-Only Mode"}]},{"type":"text","value":" and extensions like "},{"type":"element","tag":"a","props":{"href":"https://www.eff.org/https-everywhere","rel":["nofollow"]},"children":[{"type":"text","value":"HTTPS Everywhere"}]},{"type":"text","value":" work by rewriting insecure HTTP request to HTTPS. And with services like "},{"type":"element","tag":"a","props":{"href":"https://letsencrypt.org/","rel":["nofollow"]},"children":[{"type":"text","value":"Let's Encrypt"}]},{"type":"text","value":", enabling HTTPS on sites is becoming more convenient."}]},{"type":"element","tag":"h2","props":{"id":"references"},"children":[{"type":"text","value":"References"}]},{"type":"element","tag":"ul","props":{},"children":[{"type":"element","tag":"li","props":{},"children":[{"type":"element","tag":"a","props":{"href":"https://dev.to/oneminch/http-basics-nji","rel":["nofollow"]},"children":[{"type":"text","value":"HTTP Basics"}]}]}]},{"type":"element","tag":"p","props":{},"children":[{"type":"element","tag":"em","props":{},"children":[{"type":"text","value":"Originally posted on "},{"type":"element","tag":"a","props":{"href":"https://iq.opengenus.org/idea-behind-https/","rel":["nofollow"]},"children":[{"type":"text","value":"OpenGenus IQ"}]}]}]}],"toc":{"title":"","searchDepth":2,"depth":1,"links":[{"id":"drawbacks-of-http","depth":2,"text":"Drawbacks of HTTP"},{"id":"the-solution-https","depth":2,"text":"The Solution: HTTPS"},{"id":"https-http-ssl","depth":2,"text":"HTTPS = HTTP + SSL"},{"id":"limitations-of-https","depth":2,"text":"Limitations of HTTPS"},{"id":"references","depth":2,"text":"References"}]}},"_type":"markdown","_id":"content:blog:https.md","_source":"content","_file":"blog/https.md","_extension":"md"},{"_path":"/blog/mahedi-test","_dir":"blog","_draft":false,"_partial":false,"_locale":"","_empty":false,"title":"My First Test Blog","description":"What is the Domain Name System?","id":"bmYRMchdQ79b4wetoTzAVtest","updated":1688877769801,"created":1645422712314,"image":"","head":{"meta":[{"name":"keywords","content":"dns, http, https, networking"},{"name":"robots","content":"index, follow"},{"name":"author","content":"Dawit (@oneminch)"},{"property":"og:type","content":"article"},{"name":"twitter:card","content":"summary_large_image"}]},"tags":["dns","http","https","networking"],"series":"Computer Networks","navOrder":1,"body":{"type":"root","children":[{"type":"element","tag":"h2","props":{"id":"introduction"},"children":[{"type":"text","value":"Introduction"}]},{"type":"element","tag":"p","props":{},"children":[{"type":"text","value":"This is a test post"}]}],"toc":{"title":"","searchDepth":2,"depth":1,"links":[{"id":"introduction","depth":2,"text":"Introduction"}]}},"_type":"markdown","_id":"content:blog:mahedi-test.md","_source":"content","_file":"blog/mahedi-test.md","_extension":"md"}]